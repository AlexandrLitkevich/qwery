// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	user "github.com/AlexandrLitkevich/qwery/internal/http-server/handlers/user"
	mock "github.com/stretchr/testify/mock"
)

// CreateUserProvider is an autogenerated mock type for the CreateUserProvider type
type CreateUserProvider struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: _a0
func (_m *CreateUserProvider) CreateUser(_a0 user.Request) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(user.Request) (bool, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(user.Request) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(user.Request) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreateUserProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateUserProvider creates a new instance of CreateUserProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateUserProvider(t mockConstructorTestingTNewCreateUserProvider) *CreateUserProvider {
	mock := &CreateUserProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
